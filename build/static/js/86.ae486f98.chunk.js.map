{"version":3,"sources":["app/views/sessions/stylesSignIn.js","app/views/sessions/Signin.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"names":["StyleSignIn","styled","div","SigninSchema","yup","shape","email","required","password","min","connect","state","loginWithEmailAndPassword","PropTypes","func","isRequired","user","useState","className","src","color-scheme","type","id","name","value","checked","onChange","e","document","getElementById","display","for","initialValues","validationSchema","onSubmit","isSubmitting","props","values","errors","handleChange","touched","handleBlur","handleSubmit","htmlFor","onBlur","to","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties"],"mappings":"iOAEaA,E,OAAcC,EAAOC,IAAV,q/C,SCQlBC,EAAeC,WAAaC,MAAM,CACtCC,MAAOF,WAAaE,MAAM,iBAAiBC,SAAS,qBACpDC,SAAUJ,WAEPK,IAAI,EAAG,qCACPF,SAAS,0BAmRCG,uBALS,SAACC,GAAD,MAAY,CAClCC,0BAA2BC,IAAUC,KAAKC,WAC1CC,KAAML,EAAMK,QAG0B,CACtCJ,+BADaF,EAhRA,WAcb,IAIA,EAA0BO,mBAJP,CACjBX,MAAO,qBACPE,SAAU,aAEZ,mBAAOG,EAAP,UAWA,OACE,kBAACX,EAAD,KAyGE,6BACE,yBAAKkB,UAAU,oBACb,yBAAKC,IAAI,4BACT,yBAAKD,UAAU,WAAWE,eAAa,SACrC,6BACA,2BACEC,KAAK,QACLC,GAAG,gBACHC,KAAK,QACLC,MAAM,gBACNC,SAAO,EACPC,SAAU,SAACC,GAvHrBC,SAASC,eAAe,aAAaC,QAAU,UAyHvC,2BAAOC,IAAI,iBAAX,mBAEA,6BACA,2BACEV,KAAK,QACLC,GAAG,aACHC,KAAK,QACLC,MAAM,eAGR,2BAAOO,IAAI,cAAX,iBAGF,yBAAKT,GAAG,aACA,kBAAC,IAAD,CACEU,cAAerB,EACfsB,iBAAkB9B,EAClB+B,SAlJG,SAACV,EAAD,GAA6B,EAAnBW,aAC7B,EAAKC,MAAMxB,0BAA0BY,MAmJpB,gBACCa,EADD,EACCA,OACAC,EAFD,EAECA,OAEAC,GAJD,EAGCC,QAHD,EAICD,cACAE,EALD,EAKCA,WACAC,EAND,EAMCA,aAND,EAOCP,aAPD,OASC,0BAAMD,SAAUQ,GACb,yBAAKxB,UAAU,cACd,2BAAOyB,QAAQ,QAAf,mBACA,2BACEzB,UAAU,sDACVG,KAAK,OACLE,KAAK,OACLG,SAAUa,EACVK,OAAQH,EACRjB,MAAOa,EAAOd,OAEfe,EAAOf,MACN,yBAAKL,UAAU,yBACZoB,EAAOf,OAId,yBAAKL,UAAU,cACb,2BAAOyB,QAAQ,SAAf,YACA,2BACEzB,UAAU,sDACVG,KAAK,QACLE,KAAK,QACLG,SAAUa,EACVK,OAAQH,EACRjB,MAAOa,EAAO/B,QAEfgC,EAAOhC,OACN,yBAAKY,UAAU,yBACZoB,EAAOhC,QAId,yBAAKY,UAAU,cACb,2BAAOyB,QAAQ,YAAf,YACA,2BACEzB,UAAU,oCACVG,KAAK,WACLE,KAAK,WACLG,SAAUa,EACVK,OAAQH,EACRjB,MAAOa,EAAO7B,WAEf8B,EAAO9B,UACN,yBAAKU,UAAU,yBACZoB,EAAO9B,WAId,yBAAKU,UAAU,eACf,6BACE,2BAAOG,KAAK,aACb,+CAEF,yBAAKH,UAAU,UACf,iDAKD,kBAAC,IAAD,CAAM2B,GAAG,iBACP,4BACE3B,UAAU,8CACVG,KAAK,SACLC,GAAG,aAHL,gBAYd,yBAAKJ,UAAU,mBACP,kBAAC,IAAD,CACE2B,GAAG,kBACH3B,UAAU,iCACVI,GAAG,iBAHL,uC,iCC5QH,SAASwB,EAAuBC,EAASC,GAKtD,OAJKA,IACHA,EAAMD,EAAQE,MAAM,IAGfC,OAAOC,OAAOD,OAAOE,iBAAiBL,EAAS,CACpDC,IAAK,CACHxB,MAAO0B,OAAOC,OAAOH,OAP3B","file":"static/js/86.ae486f98.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyleSignIn = styled.div`\n.auth-layout-wrap {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 0px;\n    gap: 30px;\n   \n}\n.selected {\n    display: flex;\nflex-direction: row;\npadding: 0px;\ngap: 36px;\n}\ninput[name=\"login\"] {\n    accent-color:#00CDC2;\n    ;\n    color-scheme: light;\n   }\n   [color-scheme=\"light\"] {\n    color-scheme: light;\n  }\n#formLogin {\n    width: 380px\n   \n}\n.form-group label {\n    width: 205px;\n  height: 20px;\nfont-style: normal;\nfont-weight: 600;\nfont-size: 16px;\nline-height: 20px;\n/* identical to box height, or 125% */\n\n\n/* Neutral/70 */\n\ncolor: #4D4D4D;\n}\n.form-control {\n    border-radius: 5px;\n    border: 1px solid #E5E5E5;\n    background-color: #E5E5E5\n    height: 50px\n}\n.rememberBox {\n    display: flex;\n}\n.forgot {\n    margin-left: 120px;\n    width: 153px;\nheight: 19px;\n\n\nfont-style: normal;\nfont-weight: 700;\nfont-size: 14px;\nline-height: 19px;\n/* identical to box height */\ncolor: #00CDC2;\ntext-align: right;\ntext-decoration-line: underline;\n\n}\n#btn-login {\n    background: linear-gradient(0deg, #00CDC2, #00CDC2), #FFFFFF;\n    border :none\n    height: 50px;\n    box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.4);\n    border-radius: 25px;\n}\n#btn-signUpNew {\n    width: 212px;\nheight: 19px;\nfont-style: normal;\nfont-weight: 700;\nfont-size: 14px;\nline-height: 19px;\ndisplay: flex;\nalign-items: center;\ntext-align: center;\ntext-decoration-line: underline;\ncolor: #00CDC2;\n\n}\n`\n","import React, { useState } from \"react\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { loginWithEmailAndPassword } from \"app/redux/actions/LoginActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { StyleSignIn } from \"./stylesSignIn\";\nimport { Label } from \"recharts\";\nconst SigninSchema = yup.object().shape({\n  email: yup.string().email(\"Invalid email\").required(\"email is required\"),\n  password: yup\n    .string()\n    .min(8, \"Password must be 8 character long\")\n    .required(\"password is required\"),\n});\n\nconst Signin = () => {\n  // state = {\n  //   email: \"watson@example.com\",\n  //   password: \"12345678\",\n  // };\n\n  // handleChange = (event) => {\n  //   event.persist();\n  //   this.setState({ [event.target.name]: event.target.value });\n  // };\n\n  // handleSubmit = (value, { isSubmitting }) => {\n  //   this.props.loginWithEmailAndPassword(value);\n  // };\n  let initialState = {\n    email: \"watson@example.com\",\n    password: \"12345678\",\n  };\n  const [state, setState] = useState(initialState);\n  const handleSubmit = (value, { isSubmitting }) => {\n    this.props.loginWithEmailAndPassword(value);\n  };\n  const handleChange = (event) => {\n    event.persist();\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  const checked = () => {\n    document.getElementById(\"formLogin\").display = \"none\"         \n  }\n  return (\n    <StyleSignIn>\n      {/* <div\n        className=\"auth-layout-wrap\"\n        \n      >\n        <div className=\"auth-content\">\n         \n           \n             \n                \n                  <div className=\"auth-logo text-center mb-4\">\n                    <img src=\"/assets/images/logo.png\" alt=\"\" />\n                  </div>\n                  <h1 className=\"mb-3 text-18\">Sign In</h1>\n                  <Formik\n                    initialValues={state}\n                    validationSchema={SigninSchema}\n                    onSubmit={handleSubmit}\n                  >\n                    {({\n                      values,\n                      errors,\n                      touched,\n                      handleChange,\n                      handleBlur,\n                      handleSubmit,\n                      isSubmitting,\n                    }) => (\n                      <form onSubmit={handleSubmit}>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"email\">Email address</label>\n                          <input\n                            className=\"form-control form-control-rounded position-relative\"\n                            type=\"email\"\n                            name=\"email\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.email}\n                          />\n                          {errors.email && (\n                            <div className=\"text-danger mt-1 ml-2\">\n                              {errors.email}\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"password\">Password</label>\n                          <input\n                            className=\"form-control form-control-rounded\"\n                            type=\"password\"\n                            name=\"password\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.password}\n                          />\n                          {errors.password && (\n                            <div className=\"text-danger mt-1 ml-2\">\n                              {errors.password}\n                            </div>\n                          )}\n                        </div>\n                        <button\n                          className=\"btn btn-rounded btn-primary w-100 my-1 mt-2\"\n                          type=\"submit\"\n                        >\n                          Sign In\n                        </button>\n                      </form>\n                    )}\n                  </Formik>\n\n                  <div className=\"mt-3 text-center\">\n                    <Link to=\"/session/forgot-password\" className=\"text-muted\">\n                      <u>Forgot Password?</u>\n                    </Link>\n                  </div>\n                </div>\n              </div>\n              <div\n                className=\"col-md-6 text-center \"\n                style={{\n                  backgroundSize: \"cover\",\n                  backgroundImage: \"url(/assets/images/photo-long-3.jpg)\",\n                }}\n              >\n                <div className=\"pe-3 auth-right\">\n                  <Link\n                    to=\"/session/signup\"\n                    className=\"btn btn-rounded btn-outline-primary btn-outline-email w-100 my-1 btn-icon-text\"\n                  >\n                    <i className=\"i-Mail-with-At-Sign\"></i> Sign up with Email\n                  </Link>\n\n                  <Button className=\"btn btn-rounded btn-outline-google w-100 my-1 btn-icon-text\">\n                    <i className=\"i-Google-Plus\"></i> Sign up with Google\n                  </Button>\n                  <Button className=\"btn btn-rounded w-100 my-1 btn-icon-text btn-outline-facebook\">\n                    <i className=\"i-Facebook-2\"></i> Sign up with Facebook\n                  </Button>\n                \n             \n            \n          </div>\n       \n      </div> */}\n      <div>\n        <div className=\"auth-layout-wrap\">\n          <img src=\"/assets/images/logo.png\" />\n          <div className=\"selected\" color-scheme=\"light\">\n            <div>\n            <input\n              type=\"radio\"\n              id=\"employeeLogin\"\n              name=\"login\"\n              value=\"employeeLogin\"\n              checked\n              onChange={(e)=> {checked(e)}}\n            />\n            <label for=\"employeeLogin\">Employee Login</label>\n            </div>\n            <div>\n            <input\n              type=\"radio\"\n              id=\"adminLogin\"\n              name=\"login\"\n              value=\"adminLogin\"\n              \n            />\n            <label for=\"adminLogin\">Admin Login</label>\n            </div>\n          </div>\n          <div id=\"formLogin\">\n                  <Formik\n                    initialValues={state}\n                    validationSchema={SigninSchema}\n                    onSubmit={handleSubmit}\n                  >\n                    {({\n                      values,\n                      errors,\n                      touched,\n                      handleChange,\n                      handleBlur,\n                      handleSubmit,\n                      isSubmitting,\n                    }) => (\n                      <form onSubmit={handleSubmit}>\n                         <div className=\"form-group\">\n                          <label htmlFor=\"name\">Organization ID</label>\n                          <input\n                            className=\"form-control form-control-rounded position-relative\"\n                            type=\"text\"\n                            name=\"name\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.name}\n                          />\n                          {errors.name && (\n                            <div className=\"text-danger mt-1 ml-2\">\n                              {errors.name}\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"email\">Email ID</label>\n                          <input\n                            className=\"form-control form-control-rounded position-relative\"\n                            type=\"email\"\n                            name=\"email\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.email}\n                          />\n                          {errors.email && (\n                            <div className=\"text-danger mt-1 ml-2\">\n                              {errors.email}\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"password\">Password</label>\n                          <input\n                            className=\"form-control form-control-rounded\"\n                            type=\"password\"\n                            name=\"password\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.password}\n                          />\n                          {errors.password && (\n                            <div className=\"text-danger mt-1 ml-2\">\n                              {errors.password}\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"rememberBox\">\n                        <div >\n                          <input type=\"checkbox\"></input>\n                         <label>Remember me</label>\n                       </div>\n                       <div className=\"forgot\">\n                       <a>\n                       Forgot password?\n                     </a>\n                      </div>\n                      </div>\n                      <Link to='/dashboard/v1'>\n                        <button\n                          className=\"btn btn-rounded btn-primary w-100 my-1 mt-2\"\n                          type=\"submit\"\n                          id=\"btn-login\"\n                        >\n                          Log In\n                        </button>\n                        </Link>\n                      </form>\n                    )}\n                  </Formik>\n          </div>\n          <div className=\"pe-3 auth-right\">\n                  <Link\n                    to=\"/session/signup\"\n                    className=\"btn   w-100 my-1 btn-icon-text\"\n                    id=\"btn-signUpNew\"\n                  >\n                     Sign up new company account\n                  </Link>\n\n          </div>\n             \n          \n        </div>\n      </div>\n    </StyleSignIn>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  loginWithEmailAndPassword: PropTypes.func.isRequired,\n  user: state.user,\n});\n\nexport default connect(mapStateToProps, {\n  loginWithEmailAndPassword,\n})(Signin);\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"sourceRoot":""}