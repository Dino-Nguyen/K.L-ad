{"version":3,"sources":["../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/DropdownContext.js","../node_modules/@restart/ui/esm/DropdownMenu.js","../node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js","../node_modules/@restart/ui/esm/DropdownToggle.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/@restart/ui/esm/SelectableContext.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useEventListener.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useGlobalListener.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/@restart/ui/esm/NavContext.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../packages/@react-aria/ssr/src/SSRProvider.tsx","../node_modules/react-bootstrap/esm/DropdownMenu.js","../node_modules/react-bootstrap/esm/DropdownToggle.js","../node_modules/@restart/ui/esm/DropdownItem.js","../node_modules/@restart/ui/esm/Dropdown.js","../node_modules/react-bootstrap/esm/DropdownItem.js","../node_modules/react-bootstrap/esm/Dropdown.js","../node_modules/@restart/ui/esm/DropdownContext.js"],"names":["context","React","displayName","DropdownContext","_excluded","noop","useDropdownMenu","options","useContext","useCallbackRef","arrowElement","attachArrowRef","hasShownRef","useRef","flip","offset","rootCloseEvent","fixed","placementOverride","placement","popperConfig","enableEventListeners","usePopper","shouldUsePopper","show","current","handleClose","e","toggle","setMenu","menuElement","toggleElement","popper","mergeOptionsWithPopperConfig","enabled","enableEvents","menuProps","Object","assign","ref","id","attributes","style","styles","metadata","hasShown","arrowProps","arrow","useRootClose","clickTrigger","disabled","DropdownMenu","_ref","children","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","props","meta","_jsx","_Fragment","defaultProps","useWrappedRefWithWarning","componentName","isRoleMenu","el","_el$getAttribute","getAttribute","toLowerCase","useDropdownToggle","useSSRSafeId","setToggle","handleClick","useCallback","onClick","DropdownToggle","isReactNative","global","navigator","product","isDOM","document","useLayoutEffect","useEffect","useButtonProps","tagName","href","rel","tabIndex","type","event","trim","isTrivialHref","preventDefault","stopPropagation","role","undefined","onKeyDown","Button","asProp","as","buttonProps","Component","SelectableContext","makeEventKey","eventKey","String","useEventListener","eventTarget","listener","capture","handler","useEventCallback","addEventListener","removeEventListener","usePrevious","value","useGlobalListener","documentTarget","dataAttr","property","dataProp","WeakMap","Anchor","handleKeyDown","NavContext","bsPrefix","variant","size","active","className","prefix","useBootstrapPrefix","classNames","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","useCommittedRef","useForceUpdate","useReducer","state","fn","apply","arguments","defaultContext","Math","SSRContext","canUseDOM","Boolean","window","defaultId","ctx","console","useMemo","getDropdownMenuPlacement","alignEnd","dropDirection","isRTL","align","showProps","renderOnMount","isNavbar","NavbarContext","contextAlign","drop","isInputGroup","InputGroupContext","alignClasses","brkPoint","direction","push","useMergedRefs","useIsomorphicEffect","update","close","split","childBsPrefix","dropdownContext","toggleProps","useDropdownItem","onSelectCtx","activeKey","isActive","isPropagationStopped","DropdownItem","dropdownItemProps","useRefWithUpdate","forceUpdate","attachRef","Dropdown","defaultShow","rawShow","onSelect","rawOnToggle","onToggle","itemSelector","focusFirstItemOnShow","useUncontrolledProp","menuRef","toggleRef","lastShow","lastSourceEvent","focusInDropdown","nextShow","originalEvent","handleSelect","contains","activeElement","focusToggle","focus","maybeFocusFirst","focusType","test","first","getNextFocusedChild","items","index","max","min","_menuRef$current","_toggleRef$current","fromMenu","fromToggle","next","_menuRef$current2","once","Provider","Menu","Toggle","Item","DropdownHeader","createWithBsPrefix","DropdownDivider","DropdownItemText","pProps","useUncontrolled","autoClose","navbar","useIsRTL","handleToggle","currentTarget","contextValue","BaseDropdown","ItemText","Divider","Header"],"mappings":"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","file":"static/js/1.27aa6667.chunk.js","sourcesContent":["import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","import * as React from 'react';\nconst DropdownContext = /*#__PURE__*/React.createContext({});\nDropdownContext.displayName = 'DropdownContext';\nexport default DropdownContext;","const _excluded = [\"children\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useContext, useRef } from 'react';\nimport * as React from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst noop = () => {};\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\n\n\nexport function useDropdownMenu(options = {}) {\n  const context = useContext(DropdownContext);\n  const [arrowElement, attachArrowRef] = useCallbackRef();\n  const hasShownRef = useRef(false);\n  const {\n    flip,\n    offset,\n    rootCloseEvent,\n    fixed = false,\n    placement: placementOverride,\n    popperConfig = {},\n    enableEventListeners = true,\n    usePopper: shouldUsePopper = !!context\n  } = options;\n  const show = (context == null ? void 0 : context.show) == null ? !!options.show : context.show;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  const handleClose = e => {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n\n  const {\n    placement,\n    setMenu,\n    menuElement,\n    toggleElement\n  } = context || {};\n  const popper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placementOverride || placement || 'bottom-start',\n    enabled: shouldUsePopper,\n    enableEvents: enableEventListeners == null ? show : enableEventListeners,\n    offset,\n    flip,\n    fixed,\n    arrowElement,\n    popperConfig\n  }));\n  const menuProps = Object.assign({\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  }, popper.attributes.popper, {\n    style: popper.styles.popper\n  });\n  const metadata = {\n    show,\n    placement,\n    hasShown: hasShownRef.current,\n    toggle: context == null ? void 0 : context.toggle,\n    popper: shouldUsePopper ? popper : null,\n    arrowProps: shouldUsePopper ? Object.assign({\n      ref: attachArrowRef\n    }, popper.attributes.arrow, {\n      style: popper.styles.arrow\n    }) : {}\n  };\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !show\n  });\n  return [menuProps, metadata];\n}\nconst defaultProps = {\n  usePopper: true\n};\n\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\nfunction DropdownMenu(_ref) {\n  let {\n    children\n  } = _ref,\n      options = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [props, meta] = useDropdownMenu(options);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children(props, meta)\n  });\n}\n\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  // @ts-ignore\n  if (!(process.env.NODE_ENV !== \"production\")) return ref; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  const warningRef = useCallback(refValue => {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `${componentName} injected a ref to a provided \\`as\\` component that resolved to a component instance instead of a DOM element. ` + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return useMergedRefs(warningRef, ref);\n}","import { useContext, useCallback } from 'react';\nimport * as React from 'react';\nimport { useSSRSafeId } from './ssr';\nimport DropdownContext from './DropdownContext';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const isRoleMenu = el => {\n  var _el$getAttribute;\n\n  return ((_el$getAttribute = el.getAttribute('role')) == null ? void 0 : _el$getAttribute.toLowerCase()) === 'menu';\n};\n\nconst noop = () => {};\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\n\n\nexport function useDropdownToggle() {\n  const id = useSSRSafeId();\n  const {\n    show = false,\n    toggle = noop,\n    setToggle,\n    menuElement\n  } = useContext(DropdownContext) || {};\n  const handleClick = useCallback(e => {\n    toggle(!show, e);\n  }, [show, toggle]);\n  const props = {\n    id,\n    ref: setToggle || noop,\n    onClick: handleClick,\n    'aria-expanded': !!show\n  }; // This is maybe better down in an effect, but\n  // the component is going to update anyway when the menu element\n  // is set so might return new props.\n\n  if (menuElement && isRoleMenu(menuElement)) {\n    props['aria-haspopup'] = true;\n  }\n\n  return [props, {\n    show,\n    toggle\n  }];\n}\n\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle({\n  children\n}) {\n  const [props, meta] = useDropdownToggle();\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children(props, meta)\n  });\n}\n\nDropdownToggle.displayName = 'DropdownToggle';\n/** @component */\n\nexport default DropdownToggle;","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  return [{\n    role: 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href: tagName === 'a' && disabled ? undefined : href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import * as React from 'react';\nconst SelectableContext = /*#__PURE__*/React.createContext(null);\nexport const makeEventKey = (eventKey, href = null) => {\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var handler = useEventCallback(listener);\n  useEffect(function () {\n    var target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return function () {\n      return target.removeEventListener(event, handler, capture);\n    };\n  }, [eventTarget]);\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","import useEventListener from './useEventListener';\nimport { useCallback } from 'react';\n\n/**\n * Attaches an event handler outside directly to the `document`,\n * bypassing the react synthetic event system.\n *\n * ```ts\n * useGlobalListener('keydown', (event) => {\n *  console.log(event.key)\n * })\n * ```\n *\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useGlobalListener(event, handler, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var documentTarget = useCallback(function () {\n    return document;\n  }, []);\n  return useEventListener(documentTarget, event, handler, capture);\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nvar targetMap = new WeakMap();\nvar resizeObserver;\n\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(function (entries) {\n    entries.forEach(function (entry) {\n      var handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\n\n\nexport default function useResizeObserver(element) {\n  var _useState = useState(null),\n      rect = _useState[0],\n      setRect = _useState[1];\n\n  useEffect(function () {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, function (rect) {\n      setRect(rect);\n    });\n    return function () {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    onKeyDown\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n\n  if (isTrivialHref(props.href) && !props.role || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","import * as React from 'react';\nconst NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded befor being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import * as React from 'react'; // TODO: check\n\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, {ReactNode, useContext, useLayoutEffect, useMemo, useState} from 'react';\n\n// To support SSR, the auto incrementing id counter is stored in a context. This allows\n// it to be reset on every request to ensure the client and server are consistent.\n// There is also a prefix string that is used to support async loading components\n// Each async boundary must be wrapped in an SSR provider, which appends to the prefix\n// and resets the current id counter. This ensures that async loaded components have\n// consistent ids regardless of the loading order.\ninterface SSRContextValue {\n  prefix: string,\n  current: number\n}\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst defaultContext: SSRContextValue = {\n  prefix: String(Math.round(Math.random() * 10000000000)),\n  current: 0\n};\n\nconst SSRContext = React.createContext<SSRContextValue>(defaultContext);\n\ninterface SSRProviderProps {\n  /** Your application here. */\n  children: ReactNode\n}\n\n/**\n * When using SSR with React Aria, applications must be wrapped in an SSRProvider.\n * This ensures that auto generated ids are consistent between the client and server.\n */\nexport function SSRProvider(props: SSRProviderProps): JSX.Element {\n  let cur = useContext(SSRContext);\n  let value: SSRContextValue = useMemo(() => ({\n    // If this is the first SSRProvider, start with an empty string prefix, otherwise\n    // append and increment the counter.\n    prefix: cur === defaultContext ? '' : `${cur.prefix}-${++cur.current}`,\n    current: 0\n  }), [cur]);\n\n  return (\n    <SSRContext.Provider value={value}>\n      {props.children}\n    </SSRContext.Provider>\n  );\n}\n\nlet canUseDOM = Boolean(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\n/** @private */\nexport function useSSRSafeId(defaultId?: string): string {\n  let ctx = useContext(SSRContext);\n\n  // If we are rendering in a non-DOM environment, and there's no SSRProvider,\n  // provide a warning to hint to the developer to add one.\n  if (ctx === defaultContext && !canUseDOM) {\n    console.warn('When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.');\n  }\n\n  return useMemo(() => defaultId || `react-aria${ctx.prefix}-${++ctx.current}`, [defaultId]);\n}\n\n/**\n * Returns whether the component is currently being server side rendered or\n * hydrated on the client. Can be used to delay browser-specific rendering\n * until after hydration.\n */\nexport function useIsSSR(): boolean {\n  let cur = useContext(SSRContext);\n  let isInSSRContext = cur !== defaultContext;\n  let [isSSR, setIsSSR] = useState(isInSSRContext);\n\n  // If on the client, and the component was initially server rendered,\n  // then schedule a layout effect to update the component after hydration.\n  if (typeof window !== 'undefined' && isInSSRContext) {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useLayoutEffect(() => {\n      setIsSSR(false);\n    }, []);\n  }\n\n  return isSSR;\n}\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownMenu } from '@restart/ui/DropdownMenu';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport warning from 'warning';\nimport DropdownContext from './DropdownContext';\nimport InputGroupContext from './InputGroupContext';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  flip: true\n};\nexport function getDropdownMenuPlacement(alignEnd, dropDirection, isRTL) {\n  const topStart = isRTL ? 'top-end' : 'top-start';\n  const topEnd = isRTL ? 'top-start' : 'top-end';\n  const bottomStart = isRTL ? 'bottom-end' : 'bottom-start';\n  const bottomEnd = isRTL ? 'bottom-start' : 'bottom-end';\n  const leftStart = isRTL ? 'right-start' : 'left-start';\n  const leftEnd = isRTL ? 'right-end' : 'left-end';\n  const rightStart = isRTL ? 'left-start' : 'right-start';\n  const rightEnd = isRTL ? 'left-end' : 'right-end';\n  let placement = alignEnd ? bottomEnd : bottomStart;\n  if (dropDirection === 'up') placement = alignEnd ? topEnd : topStart;else if (dropDirection === 'end') placement = alignEnd ? rightEnd : rightStart;else if (dropDirection === 'start') placement = alignEnd ? leftEnd : leftStart;\n  return placement;\n}\nconst DropdownMenu = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  align,\n  rootCloseEvent,\n  flip,\n  show: showProps,\n  renderOnMount,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  popperConfig,\n  variant,\n  ...props\n}, ref) => {\n  let alignEnd = false;\n  const isNavbar = useContext(NavbarContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n  const {\n    align: contextAlign,\n    drop,\n    isRTL\n  } = useContext(DropdownContext);\n  align = align || contextAlign;\n  const isInputGroup = useContext(InputGroupContext);\n  const alignClasses = [];\n\n  if (align) {\n    if (typeof align === 'object') {\n      const keys = Object.keys(align);\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n\n      if (keys.length) {\n        const brkPoint = keys[0];\n        const direction = align[brkPoint]; // .dropdown-menu-end is required for responsively aligning\n        // left in addition to align left classes.\n\n        alignEnd = direction === 'start';\n        alignClasses.push(`${prefix}-${brkPoint}-${direction}`);\n      }\n    } else if (align === 'end') {\n      alignEnd = true;\n    }\n  }\n\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const [menuProps, {\n    hasShown,\n    popper,\n    show,\n    toggle\n  }] = useDropdownMenu({\n    flip,\n    rootCloseEvent,\n    show: showProps,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    offset: [0, 2],\n    popperConfig,\n    placement\n  });\n  menuProps.ref = useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref);\n  useIsomorphicEffect(() => {\n    // Popper's initial position for the menu is incorrect when\n    // renderOnMount=true. Need to call update() to correct it.\n    if (show) popper == null ? void 0 : popper.update();\n  }, [show]);\n  if (!hasShown && !renderOnMount && !isInputGroup) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n\n    menuProps.close = () => toggle == null ? void 0 : toggle(false);\n\n    menuProps.align = align;\n  }\n\n  let style = props.style;\n\n  if (popper != null && popper.placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = { ...props.style,\n      ...menuProps.style\n    };\n    props['x-placement'] = popper.placement;\n  }\n\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...menuProps,\n    style: style // Bootstrap css requires this data attrib to style responsive menus.\n    ,\n    ...((alignClasses.length || isNavbar) && {\n      'data-bs-popper': 'static'\n    }),\n    className: classNames(className, prefix, show && 'show', alignEnd && `${prefix}-end`, variant && `${prefix}-${variant}`, ...alignClasses)\n  });\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\nimport DropdownContext from '@restart/ui/DropdownContext';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  split,\n  className,\n  childBsPrefix,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = Button,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  const dropdownContext = useContext(DropdownContext);\n  const isInputGroup = useContext(InputGroupContext);\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  const [toggleProps] = useDropdownToggle();\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/_jsx(Component, {\n    className: classNames(className, prefix, split && `${prefix}-split`, !!isInputGroup && (dropdownContext == null ? void 0 : dropdownContext.show) && 'show'),\n    ...toggleProps,\n    ...props\n  });\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","const _excluded = [\"eventKey\", \"disabled\", \"onClick\", \"active\", \"as\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport NavContext from './NavContext';\nimport Button from './Button';\nimport { dataAttr } from './DataKey';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * Create a dropdown item. Returns a set of props for the dropdown item component\n * including an `onClick` handler that prevents selection when the item is disabled\n */\nexport function useDropdownItem({\n  key,\n  href,\n  active,\n  disabled,\n  onClick\n}) {\n  const onSelectCtx = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const {\n    activeKey\n  } = navContext || {};\n  const eventKey = makeEventKey(key, href);\n  const isActive = active == null && key != null ? makeEventKey(activeKey) === eventKey : active;\n  const handleClick = useEventCallback(event => {\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(event);\n\n    if (onSelectCtx && !event.isPropagationStopped()) {\n      onSelectCtx(eventKey, event);\n    }\n  });\n  return [{\n    onClick: handleClick,\n    'aria-disabled': disabled || undefined,\n    'aria-selected': isActive,\n    [dataAttr('dropdown-item')]: ''\n  }, {\n    isActive\n  }];\n}\nconst DropdownItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    eventKey,\n    disabled,\n    onClick,\n    active,\n    as: Component = Button\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [dropdownItemProps] = useDropdownItem({\n    key: eventKey,\n    href: props.href,\n    disabled,\n    onClick,\n    active\n  });\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n    ref: ref\n  }, dropdownItemProps));\n});\nDropdownItem.displayName = 'DropdownItem';\nexport default DropdownItem;","import qsa from 'dom-helpers/querySelectorAll';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport { useCallback, useRef, useEffect, useMemo, useContext } from 'react';\nimport * as React from 'react';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useGlobalListener from '@restart/hooks/useGlobalListener';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle, { isRoleMenu } from './DropdownToggle';\nimport DropdownItem from './DropdownItem';\nimport SelectableContext from './SelectableContext';\nimport { dataAttr } from './DataKey';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useRefWithUpdate() {\n  const forceUpdate = useForceUpdate();\n  const ref = useRef(null);\n  const attachRef = useCallback(element => {\n    ref.current = element; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  return [ref, attachRef];\n}\n/**\n * @displayName Dropdown\n * @public\n */\n\n\nfunction Dropdown({\n  defaultShow,\n  show: rawShow,\n  onSelect,\n  onToggle: rawOnToggle,\n  itemSelector = `* [${dataAttr('dropdown-item')}]`,\n  focusFirstItemOnShow,\n  placement = 'bottom-start',\n  children\n}) {\n  const [show, onToggle] = useUncontrolledProp(rawShow, defaultShow, rawOnToggle); // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n  const [menuRef, setMenu] = useRefWithUpdate();\n  const menuElement = menuRef.current;\n  const [toggleRef, setToggle] = useRefWithUpdate();\n  const toggleElement = toggleRef.current;\n  const lastShow = usePrevious(show);\n  const lastSourceEvent = useRef(null);\n  const focusInDropdown = useRef(false);\n  const onSelectCtx = useContext(SelectableContext);\n  const toggle = useCallback((nextShow, event, source = event == null ? void 0 : event.type) => {\n    onToggle(nextShow, {\n      originalEvent: event,\n      source\n    });\n  }, [onToggle]);\n  const handleSelect = useEventCallback((key, event) => {\n    onSelect == null ? void 0 : onSelect(key, event);\n    toggle(false, event, 'select');\n\n    if (!event.isPropagationStopped()) {\n      onSelectCtx == null ? void 0 : onSelectCtx(key, event);\n    }\n  });\n  const context = useMemo(() => ({\n    toggle,\n    placement,\n    show,\n    menuElement,\n    toggleElement,\n    setMenu,\n    setToggle\n  }), [toggle, placement, show, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(document.activeElement);\n  }\n\n  const focusToggle = useEventCallback(() => {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  const maybeFocusFirst = useEventCallback(() => {\n    const type = lastSourceEvent.current;\n    let focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && isRoleMenu(menuRef.current) ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    const first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(() => {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(() => {\n    lastSourceEvent.current = null;\n  });\n\n  const getNextFocusedChild = (current, offset) => {\n    if (!menuRef.current) return null;\n    const items = qsa(menuRef.current, itemSelector);\n    let index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  useGlobalListener('keydown', event => {\n    var _menuRef$current, _toggleRef$current;\n\n    const {\n      key\n    } = event;\n    const target = event.target;\n    const fromMenu = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(target);\n    const fromToggle = (_toggleRef$current = toggleRef.current) == null ? void 0 : _toggleRef$current.contains(target); // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    const isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && fromMenu)) {\n      return;\n    }\n\n    if (!fromMenu && !fromToggle) {\n      return;\n    }\n\n    if (key === 'Tab' && (!menuRef.current || !show)) {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n    const meta = {\n      originalEvent: event,\n      source: event.type\n    };\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          const next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          onToggle(true, meta);\n        } else {\n          const next = getNextFocusedChild(target, 1);\n          if (next && next.focus) next.focus();\n        }\n\n        return;\n\n      case 'Tab':\n        // on keydown the target is the element being tabbed FROM, we need that\n        // to know if this event is relevant to this dropdown (e.g. in this menu).\n        // On `keyup` the target is the element being tagged TO which we use to check\n        // if focus has left the menu\n        addEventListener(document, 'keyup', e => {\n          var _menuRef$current2;\n\n          if (e.key === 'Tab' && !e.target || !((_menuRef$current2 = menuRef.current) != null && _menuRef$current2.contains(e.target))) {\n            onToggle(false, meta);\n          }\n        }, {\n          once: true\n        });\n        break;\n\n      case 'Escape':\n        if (key === 'Escape') {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        onToggle(false, meta);\n        break;\n\n      default:\n    }\n  });\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(DropdownContext.Provider, {\n      value: context,\n      children: children\n    })\n  });\n}\n\nDropdown.displayName = 'Dropdown';\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nDropdown.Item = DropdownItem;\nexport default Dropdown;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useDropdownItem } from '@restart/ui/DropdownItem';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  eventKey,\n  disabled = false,\n  onClick,\n  active,\n  as: Component = Anchor,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  const [dropdownItemProps, meta] = useDropdownItem({\n    key: eventKey,\n    href: props.href,\n    disabled,\n    onClick,\n    active\n  });\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...dropdownItemProps,\n    ref: ref,\n    className: classNames(className, prefix, meta.isActive && 'active', disabled && 'disabled')\n  });\n});\nDropdownItem.displayName = 'DropdownItem';\nexport default DropdownItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport BaseDropdown from '@restart/ui/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu, { getDropdownMenuPlacement } from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownHeader = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nconst DropdownDivider = createWithBsPrefix('dropdown-divider', {\n  Component: 'hr',\n  defaultProps: {\n    role: 'separator'\n  }\n});\nconst DropdownItemText = createWithBsPrefix('dropdown-item-text', {\n  Component: 'span'\n});\nconst defaultProps = {\n  navbar: false,\n  align: 'start',\n  autoClose: true\n};\nconst Dropdown = /*#__PURE__*/React.forwardRef((pProps, ref) => {\n  const {\n    bsPrefix,\n    drop,\n    show,\n    className,\n    align,\n    onSelect,\n    onToggle,\n    focusFirstItemOnShow,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    navbar: _4,\n    autoClose,\n    ...props\n  } = useUncontrolled(pProps, {\n    show: 'onToggle'\n  });\n  const isInputGroup = useContext(InputGroupContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  const isRTL = useIsRTL();\n\n  const isClosingPermitted = source => {\n    // autoClose=false only permits close on button click\n    if (autoClose === false) return source === 'click'; // autoClose=inside doesn't permit close on rootClose\n\n    if (autoClose === 'inside') return source !== 'rootClose'; // autoClose=outside doesn't permit close on select\n\n    if (autoClose === 'outside') return source !== 'select';\n    return true;\n  };\n\n  const handleToggle = useEventCallback((nextShow, meta) => {\n    if (meta.originalEvent.currentTarget === document && (meta.source !== 'keydown' || meta.originalEvent.key === 'Escape')) meta.source = 'rootClose';\n    if (isClosingPermitted(meta.source)) onToggle == null ? void 0 : onToggle(nextShow, meta);\n  });\n  const alignEnd = align === 'end';\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const contextValue = useMemo(() => ({\n    align,\n    drop,\n    isRTL\n  }), [align, drop, isRTL]);\n  return /*#__PURE__*/_jsx(DropdownContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(BaseDropdown, {\n      placement: placement,\n      show: show,\n      onSelect: onSelect,\n      onToggle: handleToggle,\n      focusFirstItemOnShow: focusFirstItemOnShow,\n      itemSelector: `.${prefix}-item:not(.disabled):not(:disabled)`,\n      children: isInputGroup ? props.children : /*#__PURE__*/_jsx(Component, { ...props,\n        ref: ref,\n        className: classNames(className, show && 'show', (!drop || drop === 'down') && prefix, drop === 'up' && 'dropup', drop === 'end' && 'dropend', drop === 'start' && 'dropstart')\n      })\n    })\n  });\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nexport default Object.assign(Dropdown, {\n  Toggle: DropdownToggle,\n  Menu: DropdownMenu,\n  Item: DropdownItem,\n  ItemText: DropdownItemText,\n  Divider: DropdownDivider,\n  Header: DropdownHeader\n});","import * as React from 'react';\nconst DropdownContext = /*#__PURE__*/React.createContext(null);\nexport default DropdownContext;"],"sourceRoot":""}